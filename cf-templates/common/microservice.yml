---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS DevOps Springboard - Sample ECS Microservice Application'
Parameters:
  ContainerRepository:
    Description: Repository for getting the container
    Type: String
  ContainerName:
    Description: Name for container used in various places
    Type: String
  ContainerTag:
    Description: Container tag being deployed
    Type: String
  DesiredCount:
    Description: Number of tasks to deploy
    Type: Number
    Default: 1
  LZStackPrefix:
    Description: Stack prefix to read parameters from landing zone stack
    Type: String
  ListenerPath:
    Description: Path for ECS listener without leading and trailing '/'
    Type: String
  TaskIamRoleArn:
    Description: ARN for IAM role to use for the task
    Type: String
    Default: ""
Mappings:
  FargateAvailability:
    us-east-1:
      Value: FARGATE
    us-east-2:
      Value: FARGATE
    us-west-2:
      Value: FARGATE
    us-west-1:
      Value: EC2
    ca-central-1:
      Value: EC2
    eu-west-1:
      Value: FARGATE
    eu-west-2:
      Value: EC2
    eu-west-3:
      Value: EC2
    eu-central-1:
      Value: EC2
    ap-northeast-1:
      Value: EC2
    ap-northeast-2:
      Value: EC2
    ap-southeast-1:
      Value: EC2
    ap-southeast-2:
      Value: EC2
    ap-south-1:
      Value: EC2
    sa-east-1:
      Value: EC2
Conditions:
  TaskHasNoIamRole:
    !Equals
      - !Ref TaskIamRoleArn
      - ""
  Fargate:
    Fn::Equals:
    - !FindInMap [FargateAvailability, !Ref "AWS::Region", "Value"]
    - "FARGATE"
Resources:
  CustomListenerPriority:
    Type: Custom::ListenerPriority
    Properties:
      ServiceToken: 
        Fn::ImportValue: !Sub ${LZStackPrefix}-lambda-listener-priority
      StackName: !Sub ${AWS::StackName}
      version: '1.0'

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${LZStackPrefix}-VpcId
      Port: 80
      Protocol: HTTP
      TargetType: !If [ Fargate, "ip", "instance" ]
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 30

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn:
        Fn::ImportValue: !Sub ${LZStackPrefix}-lb-listener
      Priority: !Sub ${CustomListenerPriority.priority}
      Conditions:
        - Field: path-pattern
          Values:
            - !Sub /${ListenerPath}/
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

  TaskExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action: sts:AssumeRole
              Effect: Allow
              Principal:
                Service: ecs-tasks.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy


  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${LZStackPrefix}-cluster-name
      DesiredCount: !Ref DesiredCount
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      TaskDefinition: !Ref TaskDefinition
      LaunchType: !If [ Fargate, "FARGATE", "EC2" ]
      NetworkConfiguration:
        Fn::If:
          - Fargate
          - AwsvpcConfiguration:
              AssignPublicIp: ENABLED
              SecurityGroups:
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-ecs-security-group
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-alb-security-group
              Subnets:
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-Private-Subnet-0
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-Private-Subnet-1
          - !Ref AWS::NoValue
      LoadBalancers:
         - ContainerName: !Ref ContainerName
           ContainerPort: 80
           TargetGroupArn: !Ref TargetGroup


  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ContainerName
      TaskRoleArn:
        Fn::If:
          - TaskHasNoIamRole
          - !Ref AWS::NoValue
          - !Ref TaskIamRoleArn
      NetworkMode: !If [ Fargate, "awsvpc", "bridge" ]
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref TaskExecutionRole
      RequiresCompatibilities:
           - !If [ Fargate, "FARGATE", "EC2" ]
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ContainerRepository}:${ContainerTag}
          Essential: true
          Memory: 128
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: SERVICE_PATH
              Value: !Ref ListenerPath
            - Name: LINK_SERVER_NAME
              Value:
                Fn::ImportValue: !Sub ${LZStackPrefix}-lb-dns
          Cpu: 10

Outputs:
  ListenerPath:
    Description: Context Path for the service
    Value: !Sub "/${ListenerPath}/"
